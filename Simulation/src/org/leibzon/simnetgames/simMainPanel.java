/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.leibzon.simnetgames;

import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.leibzon.simnetgames//sim1//EN",
autostore = false)
@TopComponent.Description(preferredID = "simMainPanel",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "filtersmode", openAtStartup = true)
@ActionID(category = "Window", id = "org.leibzo.simnetgames.simMainPanel")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_sim1Action",
preferredID = "simMainPanel")

public final class simMainPanel extends TopComponent {

String FileName_Log = "simgraph.log";
String FileName_Results_Detailed = "simgraph_results_detailed.txt";
String FileName_Results_Short = "simgraph_results.txt";
    
    public simMainPanel() {
        String[] AlgorithmNames = new String[] { 
                "AllNeighborsEqual", "AllNeighborsNoNeutral",
                "CountWithoutLinkBack", 
                "CoordinationGame2_AB", "CoordinationGame3_ABN"                
        };
        initComponents();
        setName(NbBundle.getMessage(simMainPanel.class, "CTL_sim1TopComponent"));
        setToolTipText(NbBundle.getMessage(simMainPanel.class, "HINT_sim1TopComponent"));
        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);
        Simulation_Algrorithm.setModel(new javax.swing.DefaultComboBoxModel(AlgorithmNames));
    }

    private RunableSimulation selectRunningAlgorithm() {
        RunableSimulation runner = null;
        String selected_algorithm = (String)Simulation_Algrorithm.getSelectedItem();
        if (selected_algorithm.equals("AllNeighborsEqual")) {
            runner = new RunSimulationStep_AllNeighborsSame();
        }
        if (selected_algorithm.equals("AllNeighborsNoNeutral")) {
            runner = new RunSimulationStep_AllNeighborsSame_NoNeutral();
        }
        else if (selected_algorithm.equals("CountWithoutLinkBack")) {
            runner = new RunSimulationStep_CountWithoutLinkBack();
        }
        else if (selected_algorithm.equals("CoordinationGame2_AB")) {
            runner = new RunSimulationStep_CoordinationGame_TwoStrategies();
        }
        else if (selected_algorithm.equals("CoordinationGame3_ABN")) {
            runner = new RunSimulationStep_CoordinationGame_ThreeStrategies();
        }
        return runner;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Group_Correct = new javax.swing.ButtonGroup();
        Button_Prepare = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        Button_Seed = new javax.swing.JButton();
        Seeding_Algorithm = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        TextBox_Num_A = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TextBox_Num_B = new javax.swing.JTextField();
        Seeding_Centrality_Multiplier_A = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Seeding_Centrality_Multiplier_B = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Seeding_Centrality_Multiplier_A_last = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Seeding_Centrality_Multiplier_B_last = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        Button_Run = new javax.swing.JButton();
        NumSimulations = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        Simulation_Algrorithm = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        IterationsCompleted = new javax.swing.JLabel();
        Simulation_Preference_A = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Simulation_Preference_B = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Simulation_Preference_A_step = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        Simulation_Preference_B_step = new javax.swing.JTextField();
        Simulation_Preference_A_last = new javax.swing.JTextField();
        Simulation_Preference_B_last = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        Button_End_CalculateReputation = new javax.swing.JButton();
        Correct_A = new javax.swing.JRadioButton();
        Correct_B = new javax.swing.JRadioButton();
        Button_EndOnly = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        Button_RunIndependentTrials = new javax.swing.JButton();
        Num_IndependentTrials = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setAutoscrolls(true);

        org.openide.awt.Mnemonics.setLocalizedText(Button_Prepare, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Button_Prepare.text")); // NOI18N
        Button_Prepare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_PrepareActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.openide.awt.Mnemonics.setLocalizedText(Button_Seed, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Button_Seed.text")); // NOI18N
        Button_Seed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_SeedActionPerformed(evt);
            }
        });

        Seeding_Algorithm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "GuaranteedRandomSeeding", "ProbabalisticRandomSeeding", "GuaranteedCentralitySeeding" }));
        Seeding_Algorithm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Seeding_AlgorithmActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel2.text")); // NOI18N

        TextBox_Num_A.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.TextBox_Num_A.text")); // NOI18N
        TextBox_Num_A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextBox_Num_AActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel3.text")); // NOI18N

        TextBox_Num_B.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.TextBox_Num_B.text")); // NOI18N

        Seeding_Centrality_Multiplier_A.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Seeding_Centrality_Multiplier_A.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel5.text")); // NOI18N

        Seeding_Centrality_Multiplier_B.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Seeding_Centrality_Multiplier_B.text")); // NOI18N
        Seeding_Centrality_Multiplier_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Seeding_Centrality_Multiplier_BActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel7.text")); // NOI18N

        Seeding_Centrality_Multiplier_A_last.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Seeding_Centrality_Multiplier_A_last.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel11.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel12.text")); // NOI18N

        Seeding_Centrality_Multiplier_B_last.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Seeding_Centrality_Multiplier_B_last.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Button_Seed, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Seeding_Algorithm, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(30, 30, 30)
                                .addComponent(TextBox_Num_A))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Seeding_Centrality_Multiplier_A, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Seeding_Centrality_Multiplier_A_last, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Seeding_Centrality_Multiplier_B, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Seeding_Centrality_Multiplier_B_last, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(26, 26, 26)
                                .addComponent(TextBox_Num_B, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Button_Seed)
                .addGap(12, 12, 12)
                .addComponent(Seeding_Algorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(TextBox_Num_A, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(TextBox_Num_B, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Seeding_Centrality_Multiplier_A, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(Seeding_Centrality_Multiplier_A_last, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(Seeding_Centrality_Multiplier_B, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(Seeding_Centrality_Multiplier_B_last, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.openide.awt.Mnemonics.setLocalizedText(Button_Run, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Button_Run.text")); // NOI18N
        Button_Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_RunActionPerformed(evt);
            }
        });

        NumSimulations.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "5", "10", "25", "100" }));
        NumSimulations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumSimulationsActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel1.text")); // NOI18N

        Simulation_Algrorithm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AllNeighborsEqual", "CountWithoutLinkBack" }));
        Simulation_Algrorithm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Simulation_AlgrorithmActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel4.text")); // NOI18N

        IterationsCompleted.setBackground(new java.awt.Color(-1,true));
        org.openide.awt.Mnemonics.setLocalizedText(IterationsCompleted, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.IterationsCompleted.text")); // NOI18N

        Simulation_Preference_A.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Simulation_Preference_A.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel8.text")); // NOI18N

        Simulation_Preference_B.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Simulation_Preference_B.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel10.text")); // NOI18N

        Simulation_Preference_A_step.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Simulation_Preference_A_step.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel13, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel13.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel14, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel14.text")); // NOI18N

        Simulation_Preference_B_step.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Simulation_Preference_B_step.text")); // NOI18N

        Simulation_Preference_A_last.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Simulation_Preference_A_last.text")); // NOI18N

        Simulation_Preference_B_last.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Simulation_Preference_B_last.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel16, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel16.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel17, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel17.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(Button_Run)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(NumSimulations, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel1)
                            .addGap(35, 35, 35))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addGap(3, 3, 3)
                            .addComponent(Simulation_Algrorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(3, 3, 3)
                            .addComponent(jLabel16)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IterationsCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(3, 3, 3))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(3, 3, 3)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Simulation_Preference_B, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Simulation_Preference_A, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel10))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Simulation_Preference_B_last)
                            .addComponent(Simulation_Preference_A_last, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Simulation_Preference_B_step)
                            .addComponent(Simulation_Preference_A_step, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button_Run)
                    .addComponent(NumSimulations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(Simulation_Algrorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Simulation_Preference_A, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(Simulation_Preference_A_last, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Simulation_Preference_A_step, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(Simulation_Preference_B, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(Simulation_Preference_B_last, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Simulation_Preference_B_step, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IterationsCompleted)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.openide.awt.Mnemonics.setLocalizedText(Button_End_CalculateReputation, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Button_End_CalculateReputation.text")); // NOI18N
        Button_End_CalculateReputation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_End_CalculateReputationActionPerformed(evt);
            }
        });

        Group_Correct.add(Correct_A);
        Correct_A.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(Correct_A, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Correct_A.text")); // NOI18N
        Correct_A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Correct_AActionPerformed(evt);
            }
        });

        Group_Correct.add(Correct_B);
        org.openide.awt.Mnemonics.setLocalizedText(Correct_B, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Correct_B.text")); // NOI18N
        Correct_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Correct_BActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(Button_EndOnly, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Button_EndOnly.text")); // NOI18N
        Button_EndOnly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_EndOnlyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Correct_A, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Correct_B)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Button_EndOnly, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Button_End_CalculateReputation, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                        .addGap(21, 21, 21))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Button_EndOnly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Button_End_CalculateReputation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Correct_A)
                    .addComponent(Correct_B, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.openide.awt.Mnemonics.setLocalizedText(Button_RunIndependentTrials, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Button_RunIndependentTrials.text")); // NOI18N
        Button_RunIndependentTrials.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_RunIndependentTrialsActionPerformed(evt);
            }
        });

        Num_IndependentTrials.setText(org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.Num_IndependentTrials.text")); // NOI18N
        Num_IndependentTrials.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num_IndependentTrialsActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(simMainPanel.class, "simMainPanel.jLabel9.text")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Num_IndependentTrials, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
                    .addComponent(Button_RunIndependentTrials, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Button_RunIndependentTrials)
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(Num_IndependentTrials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(275, 275, 275)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(Button_Prepare, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(341, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(304, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Button_Prepare)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

// This is called at the start to make sure graph has all attributes
// and ready to be used in the simulation
private void Button_PrepareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_PrepareActionPerformed
    (new SimPrepareGraph()).prepareGraph();
}//GEN-LAST:event_Button_PrepareActionPerformed

private void Correct_AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Correct_AActionPerformed
 // this is a radio button, no need to do anything
}//GEN-LAST:event_Correct_AActionPerformed

private void Correct_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Correct_BActionPerformed
 // this is a radio button, no need to do anything
}//GEN-LAST:event_Correct_BActionPerformed

// This function runs simulation (opinion spreading to neighbors)
private void Button_RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_RunActionPerformed
    RunableSimulation runner = null;
    String selected_algorithm = (String)Simulation_Algrorithm.getSelectedItem();
    String num_iterations_str = (String)NumSimulations.getSelectedItem();
    Integer num_iterations = new Integer(num_iterations_str);
    String num_iterations_completed_str = IterationsCompleted.getText();
    Integer num_iterations_completed = new Integer(num_iterations_completed_str);
    Double sim_preference_a = new Double(Simulation_Preference_A.getText());
    Double sim_preference_b = new Double(Simulation_Preference_B.getText());

    runner = selectRunningAlgorithm();
    if (runner!=null) {
        runner.runSimulation(num_iterations.intValue(),
                sim_preference_a.doubleValue(), sim_preference_b.doubleValue());
        num_iterations_completed = num_iterations_completed + num_iterations;
        IterationsCompleted.setText(num_iterations_completed.toString()); 
    }
    else {
        String display_text = "Error: selected parameters not recognized or not supported\n"+
                              "\n  Selected Algorithm = "+selected_algorithm+
                              "\n  Number Iterations = "+num_iterations_str+"\n";
        NotifyDescriptor d = new NotifyDescriptor.Message(display_text, NotifyDescriptor.INFORMATION_MESSAGE);
        DialogDisplayer.getDefault().notify(d);
    }
}//GEN-LAST:event_Button_RunActionPerformed

// This function is called at the end to finalize result and set 
// trust values for future runs
private void Button_End_CalculateReputationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_End_CalculateReputationActionPerformed
    Believe true_believe = null;
    if (Correct_A.isSelected()) {
        true_believe = new Believe(Believe.believe_A);
    }
    else { // if (Correct_B.isSelected()) {
        true_believe = new Believe(Believe.believe_B);
    }
    SimFinalize_CalculateReputation runner = new SimFinalize_CalculateReputation();
    runner.endSimulation_CalculateReputation(true_believe);
    IterationsCompleted.setText("0");
}//GEN-LAST:event_Button_End_CalculateReputationActionPerformed

private void Simulation_AlgrorithmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Simulation_AlgrorithmActionPerformed
 // this is a combo box, no need to do anything
}//GEN-LAST:event_Simulation_AlgrorithmActionPerformed

private void NumSimulationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumSimulationsActionPerformed
 // this is a combo box, no need to do anything
}//GEN-LAST:event_NumSimulationsActionPerformed

private GraphSeeder prepare_for_seeding(Integer[] num_seed) {                                        
    GraphSeeder runner = null;
    Integer num_seed_A = null;
    Integer num_seed_B = null;
    String strnum_seed_A = null;
    String strnum_seed_B = null;
    String selected_algorithm = (String)Seeding_Algorithm.getSelectedItem();
    String seed_centrality_multiplier_a_str = Seeding_Centrality_Multiplier_A.getText();
    String seed_centrality_multiplier_b_str = Seeding_Centrality_Multiplier_B.getText();
    Integer seed_centrality_multiplier_a = new Integer(1);
    Integer seed_centrality_multiplier_b = new Integer(1);

    if (TextBox_Num_A.getText()!=null && TextBox_Num_B.getText()!=null) {
        strnum_seed_A = TextBox_Num_A.getText();
        strnum_seed_B = TextBox_Num_B.getText();
    }
    if (strnum_seed_A != null && strnum_seed_B != null) {
        num_seed_A = new Integer(strnum_seed_A);
        num_seed_B = new Integer(strnum_seed_B);   
    }
    if (seed_centrality_multiplier_a_str!=null &&
        seed_centrality_multiplier_b_str!=null) {
        seed_centrality_multiplier_a = new Integer(seed_centrality_multiplier_a_str);
        seed_centrality_multiplier_b = new Integer(seed_centrality_multiplier_b_str);
    }
    if (num_seed_A != null && num_seed_B != null && num_seed_A.intValue()!=0 && num_seed_B.intValue()!=0) {
        num_seed[0] = num_seed_A;
        num_seed[1] = num_seed_B;
        num_seed[2] = seed_centrality_multiplier_a;
        num_seed[3] = seed_centrality_multiplier_b;
        if (selected_algorithm.equals("ProbalisticRandomSeeding")) {
            runner = new SimSeedGraph_ProbablisticRandom(num_seed_A.intValue(),num_seed_B.intValue());
        }
        if (selected_algorithm.equals("GuaranteedRandomSeeding")) {
            runner = new SimSeedGraph_GuaranteedRandom(num_seed_A.intValue(),num_seed_B.intValue());
        }
        if (selected_algorithm.equals("GuaranteedCentralitySeeding")) {
            runner = new SimSeedGraph_GuaranteedRandom_WithPreference(num_seed_A.intValue(),num_seed_B.intValue(),
                    seed_centrality_multiplier_a.intValue(),seed_centrality_multiplier_b.intValue());
        }
    }
    return runner;
}

private void Button_SeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_SeedActionPerformed
    GraphSeeder runner = null;
    Integer[] num_seed = new Integer[4];
    
    runner = prepare_for_seeding(num_seed);
    
    if (runner!=null) {
        runner.seedGraph();
    }
    else {
        String display_text = "Error - invalid or incomplete or 0 values\n"+
                              "\n  # to seed with A believe = "+num_seed[0]+
                              "\n  # to seed with B believe= "+num_seed[1]+"\n";
        NotifyDescriptor d = new NotifyDescriptor.Message(display_text, NotifyDescriptor.INFORMATION_MESSAGE);
        DialogDisplayer.getDefault().notify(d);
    }
}//GEN-LAST:event_Button_SeedActionPerformed

private void TextBox_Num_AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextBox_Num_AActionPerformed
// nothing to do here
}//GEN-LAST:event_TextBox_Num_AActionPerformed

private void Seeding_AlgorithmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Seeding_AlgorithmActionPerformed
// nothing to do here
}//GEN-LAST:event_Seeding_AlgorithmActionPerformed

private void Button_EndOnlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_EndOnlyActionPerformed
    SimFinalize_CalculateReputation runner = new SimFinalize_CalculateReputation();
    runner.endSimulation();
    IterationsCompleted.setText("0");
}//GEN-LAST:event_Button_EndOnlyActionPerformed

private void Seeding_Centrality_Multiplier_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Seeding_Centrality_Multiplier_BActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_Seeding_Centrality_Multiplier_BActionPerformed

private void Button_RunIndependentTrialsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_RunIndependentTrialsActionPerformed
    GraphSeeder seeder = null;
    RunableSimulation runner = null;
    Integer[] num_seed = new Integer[4];
    String selected_algorithm = (String)Simulation_Algrorithm.getSelectedItem();
    Integer max_iterations = new Integer((String)NumSimulations.getSelectedItem());
    Integer num_iterations_completed = new Integer(IterationsCompleted.getText());
    Double sim_preference_a = new Double(Simulation_Preference_A.getText());
    Double sim_preference_b = new Double(Simulation_Preference_B.getText());
    progressMessageWindow progressWindow = null;
    
    seeder = prepare_for_seeding(num_seed);
    runner = selectRunningAlgorithm();
    
    if (runner!=null && seeder!=null) {
        Integer num_trials = new Integer(Num_IndependentTrials.getText());
        int num_total_trials_ran = 0;
        int seed_a_start = num_seed[2].intValue();
        int seed_a_end = seed_a_start;
        int seed_b_start = num_seed[3].intValue();
        int seed_b_end = seed_b_start;
        double sim_pref_a_start = sim_preference_a.doubleValue();
        double sim_pref_b_start = sim_preference_b.doubleValue();
        double sim_pref_a_end = sim_pref_a_start;
        double sim_pref_b_end = sim_pref_b_start;
        double sim_pref_a_step = 0.1;
        double sim_pref_b_step = 0.1;
        
        // progressWindow = new progressMessageWindow();
        
        if (!Seeding_Centrality_Multiplier_A_last.getText().isEmpty()) {
            seed_a_end = (new Integer(Seeding_Centrality_Multiplier_A_last.getText())).intValue();
            if (seed_a_end<seed_a_start) {
                seed_a_end=seed_a_start;
            }
        }
        if (!Seeding_Centrality_Multiplier_B_last.getText().isEmpty()) {
            seed_a_end = (new Integer(Seeding_Centrality_Multiplier_B_last.getText())).intValue();
            if (seed_b_end<seed_b_start) {
                seed_b_end=seed_b_start;
            }
        }
        if (!Simulation_Preference_A_last.getText().isEmpty()) {
            sim_pref_a_end = (new Double(Simulation_Preference_A_last.getText())).doubleValue();
            if (sim_pref_a_end<sim_pref_a_start) {
                sim_pref_a_end=sim_pref_a_start;
            }
        }
        if (!Simulation_Preference_B_last.getText().isEmpty()) {
            sim_pref_b_end = (new Double(Simulation_Preference_B_last.getText())).doubleValue();
            if (sim_pref_b_end<sim_pref_b_start) {
                sim_pref_b_end=sim_pref_b_start;
            }
        }
        if (!Simulation_Preference_A_step.getText().isEmpty()) {
            sim_pref_a_step = (new Double(Simulation_Preference_A_step.getText())).doubleValue();
            if (sim_pref_a_end-sim_pref_a_start<sim_pref_a_step) {
                sim_pref_a_step=(sim_pref_a_end-sim_pref_a_start)/10.0;
            }
        }
        if (!Simulation_Preference_B_step.getText().isEmpty()) {
            sim_pref_b_step = (new Double(Simulation_Preference_B_step.getText())).doubleValue();
            if (sim_pref_b_end-sim_pref_b_start<sim_pref_b_step) {
                sim_pref_b_step=(sim_pref_b_end-sim_pref_b_start)/10.0;
            }
        }
        
        LoggerWriter log = new LoggerWriter(FileName_Log, FileName_Results_Detailed, FileName_Results_Short);
        if (log.start()) {
            log.log("");
            log.log("going to run all simulations and trials. seed_a_start="+seed_a_start+" seed_a_end="+seed_a_end+
                " seed_b_start="+seed_b_start+" seed_b_end="+seed_b_end+
                " sim_pref_a_start="+sim_pref_a_start+" sim_pref_a_end="+sim_pref_a_end+" sim_pref_a_step="+sim_pref_a_step+
                " sim_pref_b_start="+sim_pref_b_start+" sim_pref_b_end="+sim_pref_b_end+" sim_pref_b_step="+sim_pref_b_step);
            log.stop();
        }
                
        for (int seed_a=seed_a_start; seed_a<=seed_a_end; seed_a++) {
            for (int seed_b=seed_b_start; seed_b<=seed_b_end; seed_b++) {
                if (progressWindow != null) {
                    progressWindow.setSeedPrefs(seed_a, seed_b);
                }
                for (double sim_pref_a=sim_pref_a_start; sim_pref_a<=sim_pref_a_end; sim_pref_a+=sim_pref_a_step) {
                    for (double sim_pref_b=sim_pref_b_start; sim_pref_b<=sim_pref_b_end; sim_pref_b+=sim_pref_b_step) {
                        if (progressWindow != null) {
                            progressWindow.setRunPrefs(sim_pref_a, sim_pref_b);
                            progressWindow.setNumTrials(num_total_trials_ran,0);
                        }
                        // RunManySimulations runmany = new RunManySimulations(seeder, runner, max_iterations.intValue(), sim_preference_a.doubleValue(), sim_preference_b.doubleValue());
                        RunManySimulations runmany = new RunManySimulations(runner,
                            num_seed[0].intValue(), num_seed[1].intValue(), seed_a, seed_b,
                            max_iterations.intValue(), sim_pref_a, sim_pref_b);
                        if (log.start()) {
                            log.log("");
                            log.log("preparing to run "+num_trials+" trials with seed_pref_a="+seed_a+" seed_pref_b="+seed_b+" sim_pref_a="+sim_pref_a+" sim_pref_b="+sim_pref_b);
                            
                            runmany.execute(num_trials.intValue(), log);
                            if (progressWindow!=null) {
                                progressWindow.setResults(log.getLastLines_shortresults(50));
                                progressWindow.setLog(log.getLastLines_log(50));
                            }
                            log.stop();
                        }
                        num_total_trials_ran += num_trials.intValue();
                        /* while (progressWindow!=null && !progressWindow.endRequested() && progressWindow.isPaused()) {
                            try {
                                Thread.sleep(1000);
                            } catch(InterruptedException ex) {
                                Thread.currentThread().interrupt();
                            }
                        } */
                    }
                }
            }
        }
        if (progressWindow!=null) {
            progressWindow.close();
        }
        String display_text = "Completed "+num_total_trials_ran+" trials\n" +
                              "Log available at "+FileName_Log+"\n";
        NotifyDescriptor d = new NotifyDescriptor.Message(display_text, NotifyDescriptor.INFORMATION_MESSAGE);
        DialogDisplayer.getDefault().notify(d);
    }    
}//GEN-LAST:event_Button_RunIndependentTrialsActionPerformed

private void Num_IndependentTrialsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num_IndependentTrialsActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_Num_IndependentTrialsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_EndOnly;
    private javax.swing.JButton Button_End_CalculateReputation;
    private javax.swing.JButton Button_Prepare;
    private javax.swing.JButton Button_Run;
    private javax.swing.JButton Button_RunIndependentTrials;
    private javax.swing.JButton Button_Seed;
    private javax.swing.JRadioButton Correct_A;
    private javax.swing.JRadioButton Correct_B;
    private javax.swing.ButtonGroup Group_Correct;
    private javax.swing.JLabel IterationsCompleted;
    private javax.swing.JComboBox NumSimulations;
    private javax.swing.JTextField Num_IndependentTrials;
    private javax.swing.JComboBox Seeding_Algorithm;
    private javax.swing.JTextField Seeding_Centrality_Multiplier_A;
    private javax.swing.JTextField Seeding_Centrality_Multiplier_A_last;
    private javax.swing.JTextField Seeding_Centrality_Multiplier_B;
    private javax.swing.JTextField Seeding_Centrality_Multiplier_B_last;
    private javax.swing.JComboBox Simulation_Algrorithm;
    private javax.swing.JTextField Simulation_Preference_A;
    private javax.swing.JTextField Simulation_Preference_A_last;
    private javax.swing.JTextField Simulation_Preference_A_step;
    private javax.swing.JTextField Simulation_Preference_B;
    private javax.swing.JTextField Simulation_Preference_B_last;
    private javax.swing.JTextField Simulation_Preference_B_step;
    private javax.swing.JTextField TextBox_Num_A;
    private javax.swing.JTextField TextBox_Num_B;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
